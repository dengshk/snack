<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.snack.web.dao.record.ProSaleInfoDao">

	<!-- 销售信息 开始 -->
	<sql id="whereCondition">
		select
			a.`id` id,
		    a.`flow_id` flowId,
		    a.`state` state,
		    a.`pay` pay,
		    a.`customer_name` customerName,
		    a.`customer_tel` customerTel,
		    a.`address` address,
		    a.`type` type,
		    a.`express` express,
		    a.`express_no` expressNo,
		    a.`express_price`,
		    b.`orderPrice`+a.`express_price` tatalCost,
		    a.`origin_pay` originPay,
		    a.`really_pay` reallyPay,
		    a.`really_pay`-b.`orderPrice`-a.`express_price` profit,
		    a.`order_date` orderDate,
		    a.`sale_date` saleDate
		from t_snack_sale_info a
		left join(
			select
				`flow_id`,
				sum(`cost_price`*`order_num`) orderPrice
			from t_snack_order_log
			group by `flow_id`
		)b
			on a.`flow_id`=b.`flow_id`
		where 1=1
		<if test="flowId != null">
			and a.`flow_id` = #{flowId,jdbcType=VARCHAR}
		</if>
		<if test="customerName != null">
			and a.`customer_name` like concat('%',#{customerName,jdbcType=VARCHAR},'%')
		</if>
		<if test="starttime != null">
			and a.`order_date` &gt;= #{starttime,jdbcType=VARCHAR}
		</if>
		<if test="endtime != null">
			and a.`order_date` &lt;= #{endtime,jdbcType=VARCHAR}
		</if>
		order by a.`order_date` desc
    </sql>
    
    <select id="queryForCount" parameterType="map" resultType="java.lang.Integer">
		select count(b.flowId)
  			from (<include refid="whereCondition"/> ) b
	</select>

 <select id="queryForList" parameterType="map" resultType="com.shop.snack.web.model.ProSaleInfo">
   <![CDATA[
	   select a.*
		          from (
	 ]]>
		<include refid="whereCondition"/>	         
    <![CDATA[
		   ) a
		       limit #{lbound},#{pageSize} 
	]]>
   </select>

   <select id="queryById" parameterType="map" resultType="com.shop.snack.web.model.ProSaleInfo">
	  <include refid="whereCondition"/>
   </select>
   
   <select id="queryByName" parameterType="map" resultType="com.shop.snack.web.model.ProSaleInfo">
	  <include refid="whereCondition"/>
   </select>
   
   
   <update id="updSaleInfoValue">
   		update t_snack_sale_info
   		set `id`=`id`
		<if test="type != null">
			,`type` = #{type,jdbcType=DECIMAL}
		</if>
		<if test="state != null">
			,`state` = #{state,jdbcType=DECIMAL}
		</if>
		<if test="pay != null">
			,`pay` = #{pay,jdbcType=DECIMAL}
		</if>
   		where `flow_id` = #{flowId,jdbcType=VARCHAR}
   </update>
   
   <insert id="addOne">
		insert into t_snack_sale_info(
			`flow_id`,
			`state`,
			`pay`,
			`customer_name`,
			`customer_tel`,
			`address`,
			`type`,
			`express`,
			`express_no`,
			`express_price`,
			`tatal_cost`,
			`origin_pay`,
			`really_pay`,
			`profit`,
			`order_date`,
			`sale_date`,
			`create_time`
		)values(
			#{proSaleInfo.flowId,jdbcType=VARCHAR},
			#{proSaleInfo.state,jdbcType=DECIMAL},
			#{proSaleInfo.pay,jdbcType=DECIMAL},
			#{proSaleInfo.customerName,jdbcType=VARCHAR},
			#{proSaleInfo.customerTel,jdbcType=VARCHAR},
			#{proSaleInfo.address,jdbcType=VARCHAR},
			#{proSaleInfo.type,jdbcType=DECIMAL},
			#{proSaleInfo.express,jdbcType=VARCHAR},
			#{proSaleInfo.expressNo,jdbcType=VARCHAR},
			#{proSaleInfo.expressPrice,jdbcType=VARCHAR},
			#{proSaleInfo.tatalCost,jdbcType=VARCHAR},
			#{proSaleInfo.originPay,jdbcType=VARCHAR},
			#{proSaleInfo.reallyPay,jdbcType=VARCHAR},
			#{proSaleInfo.profit,jdbcType=VARCHAR},
			ifnull(#{proSaleInfo.orderDate,jdbcType=VARCHAR},current_date()),
			#{proSaleInfo.saleDate,jdbcType=VARCHAR},
			#{proSaleInfo.createTime,jdbcType=VARCHAR}
		)
   </insert>
   
   <update id="updOne">
		update t_snack_sale_info
		set `customer_name`=#{proSaleInfo.customerName,jdbcType=VARCHAR},
			`customer_tel`=#{proSaleInfo.customerTel,jdbcType=VARCHAR},
			`address`=#{proSaleInfo.address,jdbcType=VARCHAR},
			`express`=#{proSaleInfo.express,jdbcType=VARCHAR},
			`express_no`=#{proSaleInfo.expressNo,jdbcType=VARCHAR},
			`express_price`=#{proSaleInfo.expressPrice,jdbcType=VARCHAR},
			`really_pay`=#{proSaleInfo.reallyPay,jdbcType=VARCHAR},
			`order_date`=ifnull(#{proSaleInfo.orderDate,jdbcType=VARCHAR},current_date())
		where `flow_id`=#{proSaleInfo.flowId,jdbcType=VARCHAR}
   </update>
   
   <!-- 物理删除用户 -->
   <update id="deleteOne" parameterType="map">
   		delete from  t_snack_sale_info
   		where `flow_id` = #{flowId,jdbcType=DECIMAL}
   </update>

   <select id="query4Export" parameterType="map" resultType="map">
		select
		    a.`flow_id` flowId,
		    a.`order_date` orderDate,
		    a.`customer_name` customerName,
		    b.`product_name` productName,
		    b.`order_num` orderNum,
		    b.`cost_price` costPrice,
		    b.`sale_price` salePrice,
		    b.`cost_price`*b.`order_num` originPay,
		    (b.`sale_price`-b.`cost_price`)*b.`order_num` profit
		from t_snack_sale_info a
		left join t_snack_order_log b
		    on a.flow_id=b.flow_id
		where 1=1
		<if test="customerName != null">
			and a.`customer_name` like concat('%',#{customerName,jdbcType=VARCHAR},'%')
		</if>
		<if test="starttime != null">
			and a.`order_date` &gt;= #{starttime,jdbcType=VARCHAR}
		</if>
		<if test="endtime != null">
			and a.`order_date` &lt;= #{endtime,jdbcType=VARCHAR}
		</if>
		order by a.flow_id
   </select>
   
</mapper>