<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.snack.web.dao.record.ProOrderLogDao">

	<!-- 销售信息 开始 -->
	<sql id="whereCondition">
		select
			a.`id` id,
		    a.`flow_id` flowId,
		    a.`product_id` productId,
		    a.`type_id` typeId,
		    b.`type_name` typeName,
		    a.`product_name` productName,
		    a.`cost_price` costPrice,
		    a.`sale_price` salePrice,
		    a.`order_num` orderNum,
		    a.`order_num`*a.`cost_price` subtotalCost,
		    a.`order_num`*a.`sale_price` subtotalReally,
		    a.`order_num`*a.`sale_price`-a.`order_num`*a.`cost_price` subtotalProfit,
		    a.`type` type,
		    a.`order_date` orderDate,
		    a.`create_time` createTime
		from t_snack_order_log a,t_snack_product_classify b
		where a.`type_id`=b.`type_id`
		<if test="id != null">
			and a.`id` = #{id,jdbcType=VARCHAR}
		</if>
		<if test="flowId != null">
			and a.`flow_id` = #{flowId,jdbcType=VARCHAR}
		</if>
		<if test="type != null">
			and a.`type` = #{type,jdbcType=VARCHAR}
		</if>
		order by a.`order_date` desc
    </sql>
    
    <select id="queryForCount" parameterType="map" resultType="java.lang.Integer">
		select count(b.flowId)
  			from (<include refid="whereCondition"/> ) b
	</select>

 <select id="queryForList" parameterType="map" resultType="com.shop.snack.web.model.ProOrderLog">
   <![CDATA[
	   select a.*
		          from (
	 ]]>
		<include refid="whereCondition"/>	         
    <![CDATA[
		   ) a
		       limit #{lbound},#{pageSize} 
	]]>
   </select>

   <select id="queryById" parameterType="map" resultType="com.shop.snack.web.model.ProOrderLog">
	  <include refid="whereCondition"/>
   </select>
   
   <!-- 物理删除用户 -->
   <update id="deleteOne" parameterType="map">
   		delete from  t_snack_order_log
   		where `id` = #{id,jdbcType=DECIMAL}
   </update>
   
   <update id="deleteFlowId" parameterType="map">
   		delete from  t_snack_order_log
   		where `flow_id` = #{flowId,jdbcType=DECIMAL}
   </update>
   
   <insert id="addOne">
   		insert into t_snack_order_log (
			`flow_id`,
			`type_id`,
			`product_id`,
			`product_name`,
			`cost_price`,
			`sale_price`,
			`order_num`,
			`type`,
			`order_date`,
			`create_time`
   		)
   		select
   			#{proOrderLog.flowId,jdbcType=VARCHAR},
   			`type_id`,
   			`id`,
   			`name`,
   			#{proOrderLog.costPrice,jdbcType=VARCHAR},
   			#{proOrderLog.salePrice,jdbcType=VARCHAR},
   			#{proOrderLog.orderNum,jdbcType=DECIMAL},
   			#{proOrderLog.type,jdbcType=DECIMAL},
   			#{proOrderLog.orderDate,jdbcType=VARCHAR},
			#{proOrderLog.createTime,jdbcType=VARCHAR}
   		from t_snack_product
   		where `name`=#{proOrderLog.productName,jdbcType=VARCHAR}
   		limit 0,1
   </insert>
   
   <update id="updOne">
   		update t_snack_order_log
   		set `product_id`=#{proOrderLog.productId,jdbcType=DECIMAL},
   		    `product_name`=#{proOrderLog.productName,jdbcType=VARCHAR},
			`cost_price`=#{proOrderLog.costPrice,jdbcType=VARCHAR},
			`sale_price`=#{proOrderLog.salePrice,jdbcType=VARCHAR},
			`order_num`=#{proOrderLog.orderNum,jdbcType=DECIMAL}
   		where id = #{proOrderLog.id,jdbcType=DECIMAL}
   </update>
</mapper>